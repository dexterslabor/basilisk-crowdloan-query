// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// prettier-ignore
// @ts-ignore
import { DateResolver as Date } from 'graphql-scalars';
// prettier-ignore
// @ts-ignore
import { GraphQLID as ID } from 'graphql';
// prettier-ignore
// @ts-ignore
import { ArgsType, Field as TypeGraphQLField, Float, InputType as TypeGraphQLInputType, Int } from 'type-graphql';
// prettier-ignore
// @ts-ignore
import { registerEnumType, GraphQLISODateTime as DateTime } from "type-graphql";

import * as BN from "bn.js";

// prettier-ignore
// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require('graphql-type-json');
// prettier-ignore
// @ts-ignore
import { BaseWhereInput, JsonObject, PaginationArgs, DateOnlyString, DateTimeString, BigInt, Bytes } from '@subsquid/warthog';

// @ts-ignore
import { HistoricalParachainFundsPledged } from "../modules/historical-parachain-funds-pledged/historical-parachain-funds-pledged.model";
// @ts-ignore
import { Bid } from "../modules/bid/bid.model";
// @ts-ignore
import { HistoricalIncentive } from "../modules/historical-incentive/historical-incentive.model";
// @ts-ignore
import { Incentive } from "../modules/incentive/incentive.model";
// @ts-ignore
import { Parachain } from "../modules/parachain/parachain.model";
// @ts-ignore
import { Crowdloan } from "../modules/crowdloan/crowdloan.model";
// @ts-ignore
import { Contribution } from "../modules/contribution/contribution.model";
// @ts-ignore
import { Account } from "../modules/account/account.model";
// @ts-ignore
import { Chronicle } from "../modules/chronicle/chronicle.model";

export enum HistoricalParachainFundsPledgedOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  parachain_ASC = "parachain_ASC",
  parachain_DESC = "parachain_DESC",

  blockHeight_ASC = "blockHeight_ASC",
  blockHeight_DESC = "blockHeight_DESC",

  fundsPledged_ASC = "fundsPledged_ASC",
  fundsPledged_DESC = "fundsPledged_DESC",
}

registerEnumType(HistoricalParachainFundsPledgedOrderByEnum, {
  name: "HistoricalParachainFundsPledgedOrderByInput",
});

@TypeGraphQLInputType()
export class HistoricalParachainFundsPledgedWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  blockHeight_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  fundsPledged_in?: string[];

  @TypeGraphQLField(() => ParachainWhereInput, { nullable: true })
  parachain?: ParachainWhereInput;

  @TypeGraphQLField(() => HistoricalParachainFundsPledgedWhereInput, {
    nullable: true,
  })
  AND?: [HistoricalParachainFundsPledgedWhereInput];

  @TypeGraphQLField(() => HistoricalParachainFundsPledgedWhereInput, {
    nullable: true,
  })
  OR?: [HistoricalParachainFundsPledgedWhereInput];
}

@TypeGraphQLInputType()
export class HistoricalParachainFundsPledgedWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class HistoricalParachainFundsPledgedCreateInput {
  @TypeGraphQLField(() => ID)
  parachain!: string;

  @TypeGraphQLField()
  blockHeight!: string;

  @TypeGraphQLField()
  fundsPledged!: string;
}

@TypeGraphQLInputType()
export class HistoricalParachainFundsPledgedUpdateInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  parachain?: string;

  @TypeGraphQLField({ nullable: true })
  blockHeight?: string;

  @TypeGraphQLField({ nullable: true })
  fundsPledged?: string;
}

@ArgsType()
export class HistoricalParachainFundsPledgedWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => HistoricalParachainFundsPledgedWhereInput, {
    nullable: true,
  })
  where?: HistoricalParachainFundsPledgedWhereInput;

  @TypeGraphQLField(() => HistoricalParachainFundsPledgedOrderByEnum, {
    nullable: true,
  })
  orderBy?: HistoricalParachainFundsPledgedOrderByEnum[];
}

@ArgsType()
export class HistoricalParachainFundsPledgedCreateManyArgs {
  @TypeGraphQLField(() => [HistoricalParachainFundsPledgedCreateInput])
  data!: HistoricalParachainFundsPledgedCreateInput[];
}

@ArgsType()
export class HistoricalParachainFundsPledgedUpdateArgs {
  @TypeGraphQLField() data!: HistoricalParachainFundsPledgedUpdateInput;
  @TypeGraphQLField() where!: HistoricalParachainFundsPledgedWhereUniqueInput;
}

export enum BidOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  parachain_ASC = "parachain_ASC",
  parachain_DESC = "parachain_DESC",

  balance_ASC = "balance_ASC",
  balance_DESC = "balance_DESC",

  leasePeriodStart_ASC = "leasePeriodStart_ASC",
  leasePeriodStart_DESC = "leasePeriodStart_DESC",

  leasePeriodEnd_ASC = "leasePeriodEnd_ASC",
  leasePeriodEnd_DESC = "leasePeriodEnd_DESC",
}

registerEnumType(BidOrderByEnum, {
  name: "BidOrderByInput",
});

@TypeGraphQLInputType()
export class BidWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  balance_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodStart_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodStart_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodStart_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodStart_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodStart_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  leasePeriodStart_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodEnd_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodEnd_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodEnd_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodEnd_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leasePeriodEnd_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  leasePeriodEnd_in?: string[];

  @TypeGraphQLField(() => ParachainWhereInput, { nullable: true })
  parachain?: ParachainWhereInput;

  @TypeGraphQLField(() => BidWhereInput, { nullable: true })
  AND?: [BidWhereInput];

  @TypeGraphQLField(() => BidWhereInput, { nullable: true })
  OR?: [BidWhereInput];
}

@TypeGraphQLInputType()
export class BidWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class BidCreateInput {
  @TypeGraphQLField(() => ID)
  parachain!: string;

  @TypeGraphQLField()
  balance!: string;

  @TypeGraphQLField()
  leasePeriodStart!: string;

  @TypeGraphQLField()
  leasePeriodEnd!: string;
}

@TypeGraphQLInputType()
export class BidUpdateInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  parachain?: string;

  @TypeGraphQLField({ nullable: true })
  balance?: string;

  @TypeGraphQLField({ nullable: true })
  leasePeriodStart?: string;

  @TypeGraphQLField({ nullable: true })
  leasePeriodEnd?: string;
}

@ArgsType()
export class BidWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => BidWhereInput, { nullable: true })
  where?: BidWhereInput;

  @TypeGraphQLField(() => BidOrderByEnum, { nullable: true })
  orderBy?: BidOrderByEnum[];
}

@ArgsType()
export class BidCreateManyArgs {
  @TypeGraphQLField(() => [BidCreateInput])
  data!: BidCreateInput[];
}

@ArgsType()
export class BidUpdateArgs {
  @TypeGraphQLField() data!: BidUpdateInput;
  @TypeGraphQLField() where!: BidWhereUniqueInput;
}

export enum HistoricalIncentiveOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  blockHeight_ASC = "blockHeight_ASC",
  blockHeight_DESC = "blockHeight_DESC",

  leadPercentageRate_ASC = "leadPercentageRate_ASC",
  leadPercentageRate_DESC = "leadPercentageRate_DESC",

  siblingParachain_ASC = "siblingParachain_ASC",
  siblingParachain_DESC = "siblingParachain_DESC",
}

registerEnumType(HistoricalIncentiveOrderByEnum, {
  name: "HistoricalIncentiveOrderByInput",
});

@TypeGraphQLInputType()
export class HistoricalIncentiveWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  blockHeight_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  leadPercentageRate_in?: string[];

  @TypeGraphQLField(() => ParachainWhereInput, { nullable: true })
  siblingParachain?: ParachainWhereInput;

  @TypeGraphQLField(() => HistoricalIncentiveWhereInput, { nullable: true })
  AND?: [HistoricalIncentiveWhereInput];

  @TypeGraphQLField(() => HistoricalIncentiveWhereInput, { nullable: true })
  OR?: [HistoricalIncentiveWhereInput];
}

@TypeGraphQLInputType()
export class HistoricalIncentiveWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class HistoricalIncentiveCreateInput {
  @TypeGraphQLField()
  blockHeight!: string;

  @TypeGraphQLField()
  leadPercentageRate!: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  siblingParachain?: string;
}

@TypeGraphQLInputType()
export class HistoricalIncentiveUpdateInput {
  @TypeGraphQLField({ nullable: true })
  blockHeight?: string;

  @TypeGraphQLField({ nullable: true })
  leadPercentageRate?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  siblingParachain?: string;
}

@ArgsType()
export class HistoricalIncentiveWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => HistoricalIncentiveWhereInput, { nullable: true })
  where?: HistoricalIncentiveWhereInput;

  @TypeGraphQLField(() => HistoricalIncentiveOrderByEnum, { nullable: true })
  orderBy?: HistoricalIncentiveOrderByEnum[];
}

@ArgsType()
export class HistoricalIncentiveCreateManyArgs {
  @TypeGraphQLField(() => [HistoricalIncentiveCreateInput])
  data!: HistoricalIncentiveCreateInput[];
}

@ArgsType()
export class HistoricalIncentiveUpdateArgs {
  @TypeGraphQLField() data!: HistoricalIncentiveUpdateInput;
  @TypeGraphQLField() where!: HistoricalIncentiveWhereUniqueInput;
}

export enum IncentiveOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  blockHeight_ASC = "blockHeight_ASC",
  blockHeight_DESC = "blockHeight_DESC",

  leadPercentageRate_ASC = "leadPercentageRate_ASC",
  leadPercentageRate_DESC = "leadPercentageRate_DESC",

  siblingParachain_ASC = "siblingParachain_ASC",
  siblingParachain_DESC = "siblingParachain_DESC",

  totalContributionWeight_ASC = "totalContributionWeight_ASC",
  totalContributionWeight_DESC = "totalContributionWeight_DESC",
}

registerEnumType(IncentiveOrderByEnum, {
  name: "IncentiveOrderByInput",
});

@TypeGraphQLInputType()
export class IncentiveWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  blockHeight_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  leadPercentageRate_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  leadPercentageRate_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributionWeight_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributionWeight_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributionWeight_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributionWeight_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributionWeight_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  totalContributionWeight_in?: string[];

  @TypeGraphQLField(() => ParachainWhereInput, { nullable: true })
  siblingParachain?: ParachainWhereInput;

  @TypeGraphQLField(() => IncentiveWhereInput, { nullable: true })
  AND?: [IncentiveWhereInput];

  @TypeGraphQLField(() => IncentiveWhereInput, { nullable: true })
  OR?: [IncentiveWhereInput];
}

@TypeGraphQLInputType()
export class IncentiveWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class IncentiveCreateInput {
  @TypeGraphQLField()
  blockHeight!: string;

  @TypeGraphQLField()
  leadPercentageRate!: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  siblingParachain?: string;

  @TypeGraphQLField()
  totalContributionWeight!: string;
}

@TypeGraphQLInputType()
export class IncentiveUpdateInput {
  @TypeGraphQLField({ nullable: true })
  blockHeight?: string;

  @TypeGraphQLField({ nullable: true })
  leadPercentageRate?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  siblingParachain?: string;

  @TypeGraphQLField({ nullable: true })
  totalContributionWeight?: string;
}

@ArgsType()
export class IncentiveWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => IncentiveWhereInput, { nullable: true })
  where?: IncentiveWhereInput;

  @TypeGraphQLField(() => IncentiveOrderByEnum, { nullable: true })
  orderBy?: IncentiveOrderByEnum[];
}

@ArgsType()
export class IncentiveCreateManyArgs {
  @TypeGraphQLField(() => [IncentiveCreateInput])
  data!: IncentiveCreateInput[];
}

@ArgsType()
export class IncentiveUpdateArgs {
  @TypeGraphQLField() data!: IncentiveUpdateInput;
  @TypeGraphQLField() where!: IncentiveWhereUniqueInput;
}

export enum ParachainOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  paraId_ASC = "paraId_ASC",
  paraId_DESC = "paraId_DESC",

  fundsPledged_ASC = "fundsPledged_ASC",
  fundsPledged_DESC = "fundsPledged_DESC",

  hasWonAnAuction_ASC = "hasWonAnAuction_ASC",
  hasWonAnAuction_DESC = "hasWonAnAuction_DESC",
}

registerEnumType(ParachainOrderByEnum, {
  name: "ParachainOrderByInput",
});

@TypeGraphQLInputType()
export class ParachainWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  paraId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  paraId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  paraId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  paraId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  paraId_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  fundsPledged_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  fundsPledged_in?: string[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  hasWonAnAuction_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  hasWonAnAuction_in?: Boolean[];

  @TypeGraphQLField(() => HistoricalParachainFundsPledgedWhereInput, {
    nullable: true,
  })
  historicalFundsPledged_none?: HistoricalParachainFundsPledgedWhereInput;

  @TypeGraphQLField(() => HistoricalParachainFundsPledgedWhereInput, {
    nullable: true,
  })
  historicalFundsPledged_some?: HistoricalParachainFundsPledgedWhereInput;

  @TypeGraphQLField(() => HistoricalParachainFundsPledgedWhereInput, {
    nullable: true,
  })
  historicalFundsPledged_every?: HistoricalParachainFundsPledgedWhereInput;

  @TypeGraphQLField(() => BidWhereInput, { nullable: true })
  bidparachain_none?: BidWhereInput;

  @TypeGraphQLField(() => BidWhereInput, { nullable: true })
  bidparachain_some?: BidWhereInput;

  @TypeGraphQLField(() => BidWhereInput, { nullable: true })
  bidparachain_every?: BidWhereInput;

  @TypeGraphQLField(() => CrowdloanWhereInput, { nullable: true })
  crowdloanparachain_none?: CrowdloanWhereInput;

  @TypeGraphQLField(() => CrowdloanWhereInput, { nullable: true })
  crowdloanparachain_some?: CrowdloanWhereInput;

  @TypeGraphQLField(() => CrowdloanWhereInput, { nullable: true })
  crowdloanparachain_every?: CrowdloanWhereInput;

  @TypeGraphQLField(() => HistoricalIncentiveWhereInput, { nullable: true })
  historicalincentivesiblingParachain_none?: HistoricalIncentiveWhereInput;

  @TypeGraphQLField(() => HistoricalIncentiveWhereInput, { nullable: true })
  historicalincentivesiblingParachain_some?: HistoricalIncentiveWhereInput;

  @TypeGraphQLField(() => HistoricalIncentiveWhereInput, { nullable: true })
  historicalincentivesiblingParachain_every?: HistoricalIncentiveWhereInput;

  @TypeGraphQLField(() => IncentiveWhereInput, { nullable: true })
  incentivesiblingParachain_none?: IncentiveWhereInput;

  @TypeGraphQLField(() => IncentiveWhereInput, { nullable: true })
  incentivesiblingParachain_some?: IncentiveWhereInput;

  @TypeGraphQLField(() => IncentiveWhereInput, { nullable: true })
  incentivesiblingParachain_every?: IncentiveWhereInput;

  @TypeGraphQLField(() => ParachainWhereInput, { nullable: true })
  AND?: [ParachainWhereInput];

  @TypeGraphQLField(() => ParachainWhereInput, { nullable: true })
  OR?: [ParachainWhereInput];
}

@TypeGraphQLInputType()
export class ParachainWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class ParachainCreateInput {
  @TypeGraphQLField()
  paraId!: string;

  @TypeGraphQLField()
  fundsPledged!: string;

  @TypeGraphQLField()
  hasWonAnAuction!: boolean;
}

@TypeGraphQLInputType()
export class ParachainUpdateInput {
  @TypeGraphQLField({ nullable: true })
  paraId?: string;

  @TypeGraphQLField({ nullable: true })
  fundsPledged?: string;

  @TypeGraphQLField({ nullable: true })
  hasWonAnAuction?: boolean;
}

@ArgsType()
export class ParachainWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => ParachainWhereInput, { nullable: true })
  where?: ParachainWhereInput;

  @TypeGraphQLField(() => ParachainOrderByEnum, { nullable: true })
  orderBy?: ParachainOrderByEnum[];
}

@ArgsType()
export class ParachainCreateManyArgs {
  @TypeGraphQLField(() => [ParachainCreateInput])
  data!: ParachainCreateInput[];
}

@ArgsType()
export class ParachainUpdateArgs {
  @TypeGraphQLField() data!: ParachainUpdateInput;
  @TypeGraphQLField() where!: ParachainWhereUniqueInput;
}

export enum CrowdloanOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  parachain_ASC = "parachain_ASC",
  parachain_DESC = "parachain_DESC",

  raised_ASC = "raised_ASC",
  raised_DESC = "raised_DESC",
}

registerEnumType(CrowdloanOrderByEnum, {
  name: "CrowdloanOrderByInput",
});

@TypeGraphQLInputType()
export class CrowdloanWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  raised_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  raised_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  raised_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  raised_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  raised_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  raised_in?: string[];

  @TypeGraphQLField(() => ParachainWhereInput, { nullable: true })
  parachain?: ParachainWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_none?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_some?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_every?: ContributionWhereInput;

  @TypeGraphQLField(() => CrowdloanWhereInput, { nullable: true })
  AND?: [CrowdloanWhereInput];

  @TypeGraphQLField(() => CrowdloanWhereInput, { nullable: true })
  OR?: [CrowdloanWhereInput];
}

@TypeGraphQLInputType()
export class CrowdloanWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class CrowdloanCreateInput {
  @TypeGraphQLField(() => ID)
  parachain!: string;

  @TypeGraphQLField()
  raised!: string;
}

@TypeGraphQLInputType()
export class CrowdloanUpdateInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  parachain?: string;

  @TypeGraphQLField({ nullable: true })
  raised?: string;
}

@ArgsType()
export class CrowdloanWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => CrowdloanWhereInput, { nullable: true })
  where?: CrowdloanWhereInput;

  @TypeGraphQLField(() => CrowdloanOrderByEnum, { nullable: true })
  orderBy?: CrowdloanOrderByEnum[];
}

@ArgsType()
export class CrowdloanCreateManyArgs {
  @TypeGraphQLField(() => [CrowdloanCreateInput])
  data!: CrowdloanCreateInput[];
}

@ArgsType()
export class CrowdloanUpdateArgs {
  @TypeGraphQLField() data!: CrowdloanUpdateInput;
  @TypeGraphQLField() where!: CrowdloanWhereUniqueInput;
}

export enum ContributionOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  crowdloan_ASC = "crowdloan_ASC",
  crowdloan_DESC = "crowdloan_DESC",

  account_ASC = "account_ASC",
  account_DESC = "account_DESC",

  balance_ASC = "balance_ASC",
  balance_DESC = "balance_DESC",

  blockHeight_ASC = "blockHeight_ASC",
  blockHeight_DESC = "blockHeight_DESC",
}

registerEnumType(ContributionOrderByEnum, {
  name: "ContributionOrderByInput",
});

@TypeGraphQLInputType()
export class ContributionWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  balance_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockHeight_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  blockHeight_in?: string[];

  @TypeGraphQLField(() => CrowdloanWhereInput, { nullable: true })
  crowdloan?: CrowdloanWhereInput;

  @TypeGraphQLField(() => AccountWhereInput, { nullable: true })
  account?: AccountWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  AND?: [ContributionWhereInput];

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  OR?: [ContributionWhereInput];
}

@TypeGraphQLInputType()
export class ContributionWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class ContributionCreateInput {
  @TypeGraphQLField(() => ID)
  crowdloan!: string;

  @TypeGraphQLField(() => ID)
  account!: string;

  @TypeGraphQLField()
  balance!: string;

  @TypeGraphQLField()
  blockHeight!: string;
}

@TypeGraphQLInputType()
export class ContributionUpdateInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  crowdloan?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  account?: string;

  @TypeGraphQLField({ nullable: true })
  balance?: string;

  @TypeGraphQLField({ nullable: true })
  blockHeight?: string;
}

@ArgsType()
export class ContributionWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  where?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributionOrderByEnum, { nullable: true })
  orderBy?: ContributionOrderByEnum[];
}

@ArgsType()
export class ContributionCreateManyArgs {
  @TypeGraphQLField(() => [ContributionCreateInput])
  data!: ContributionCreateInput[];
}

@ArgsType()
export class ContributionUpdateArgs {
  @TypeGraphQLField() data!: ContributionUpdateInput;
  @TypeGraphQLField() where!: ContributionWhereUniqueInput;
}

export enum AccountOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  accountId_ASC = "accountId_ASC",
  accountId_DESC = "accountId_DESC",

  totalContributed_ASC = "totalContributed_ASC",
  totalContributed_DESC = "totalContributed_DESC",
}

registerEnumType(AccountOrderByEnum, {
  name: "AccountOrderByInput",
});

@TypeGraphQLInputType()
export class AccountWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  accountId_eq?: string;

  @TypeGraphQLField({ nullable: true })
  accountId_contains?: string;

  @TypeGraphQLField({ nullable: true })
  accountId_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  accountId_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  accountId_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  totalContributed_in?: string[];

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_none?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_some?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_every?: ContributionWhereInput;

  @TypeGraphQLField(() => AccountWhereInput, { nullable: true })
  AND?: [AccountWhereInput];

  @TypeGraphQLField(() => AccountWhereInput, { nullable: true })
  OR?: [AccountWhereInput];
}

@TypeGraphQLInputType()
export class AccountWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class AccountCreateInput {
  @TypeGraphQLField()
  accountId!: string;

  @TypeGraphQLField()
  totalContributed!: string;
}

@TypeGraphQLInputType()
export class AccountUpdateInput {
  @TypeGraphQLField({ nullable: true })
  accountId?: string;

  @TypeGraphQLField({ nullable: true })
  totalContributed?: string;
}

@ArgsType()
export class AccountWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => AccountWhereInput, { nullable: true })
  where?: AccountWhereInput;

  @TypeGraphQLField(() => AccountOrderByEnum, { nullable: true })
  orderBy?: AccountOrderByEnum[];
}

@ArgsType()
export class AccountCreateManyArgs {
  @TypeGraphQLField(() => [AccountCreateInput])
  data!: AccountCreateInput[];
}

@ArgsType()
export class AccountUpdateArgs {
  @TypeGraphQLField() data!: AccountUpdateInput;
  @TypeGraphQLField() where!: AccountWhereUniqueInput;
}

export enum ChronicleOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  lastProcessedBlock_ASC = "lastProcessedBlock_ASC",
  lastProcessedBlock_DESC = "lastProcessedBlock_DESC",

  mostRecentAuctionStart_ASC = "mostRecentAuctionStart_ASC",
  mostRecentAuctionStart_DESC = "mostRecentAuctionStart_DESC",

  mostRecentAuctionClosingStart_ASC = "mostRecentAuctionClosingStart_ASC",
  mostRecentAuctionClosingStart_DESC = "mostRecentAuctionClosingStart_DESC",
}

registerEnumType(ChronicleOrderByEnum, {
  name: "ChronicleOrderByInput",
});

@TypeGraphQLInputType()
export class ChronicleWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  lastProcessedBlock_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  lastProcessedBlock_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  lastProcessedBlock_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  lastProcessedBlock_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  lastProcessedBlock_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  lastProcessedBlock_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionStart_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionStart_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionStart_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionStart_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionStart_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  mostRecentAuctionStart_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionClosingStart_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionClosingStart_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionClosingStart_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionClosingStart_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  mostRecentAuctionClosingStart_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  mostRecentAuctionClosingStart_in?: string[];

  @TypeGraphQLField(() => ChronicleWhereInput, { nullable: true })
  AND?: [ChronicleWhereInput];

  @TypeGraphQLField(() => ChronicleWhereInput, { nullable: true })
  OR?: [ChronicleWhereInput];
}

@TypeGraphQLInputType()
export class ChronicleWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class ChronicleCreateInput {
  @TypeGraphQLField()
  lastProcessedBlock!: string;

  @TypeGraphQLField({ nullable: true })
  mostRecentAuctionStart?: string;

  @TypeGraphQLField({ nullable: true })
  mostRecentAuctionClosingStart?: string;
}

@TypeGraphQLInputType()
export class ChronicleUpdateInput {
  @TypeGraphQLField({ nullable: true })
  lastProcessedBlock?: string;

  @TypeGraphQLField({ nullable: true })
  mostRecentAuctionStart?: string;

  @TypeGraphQLField({ nullable: true })
  mostRecentAuctionClosingStart?: string;
}

@ArgsType()
export class ChronicleWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => ChronicleWhereInput, { nullable: true })
  where?: ChronicleWhereInput;

  @TypeGraphQLField(() => ChronicleOrderByEnum, { nullable: true })
  orderBy?: ChronicleOrderByEnum[];
}

@ArgsType()
export class ChronicleCreateManyArgs {
  @TypeGraphQLField(() => [ChronicleCreateInput])
  data!: ChronicleCreateInput[];
}

@ArgsType()
export class ChronicleUpdateArgs {
  @TypeGraphQLField() data!: ChronicleUpdateInput;
  @TypeGraphQLField() where!: ChronicleWhereUniqueInput;
}
